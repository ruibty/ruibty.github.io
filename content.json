{"meta":{"title":"Ruibty's Blog","subtitle":"","description":"","author":"Ruibty","url":"https://ruibty.github.io","root":"/"},"pages":[{"title":"关于我","date":"2018-01-06T08:05:00.000Z","updated":"2019-12-25T06:58:53.582Z","comments":true,"path":"about/index.html","permalink":"https://ruibty.github.io/about/index.html","excerpt":"","text":"QQ:2260413 博客地址：Github地址：https://ruibty.github.io 码云Gitee：https://ruibty.gitee.io/"},{"title":"用过的一些软件推荐","date":"2018-02-16T08:05:00.000Z","updated":"2019-12-25T06:58:53.582Z","comments":true,"path":"software/index.html","permalink":"https://ruibty.github.io/software/index.html","excerpt":"","text":"跨平台Windows 软件名 下载地址 备份下载地址 备注 Adobe 官方下载 Chrome 官网完整版下载 idea 官方下载 你懂的 Eclipse Language Pack 官方下载 Dropbox 官网完整版下载 Visual NMP 官方下载 Visual AMP 官方下载 RamDisk Ruibty’s Blog shadowsocks http://shadowsocks.org/en/download/clients.html Android Studio 官方下载 sublimetext 官方下载 万彩办公大师 官方下载 rufus Github ExpressCache 版本名称 地址 备份下载地址 联想（推荐） 官方下载 - t440s Ruibty’s Blog 华硕 http://driver.zol.com.cn/detail/45/444953.shtml Sandisk 官方下载 三星 acer Mac 软件名 下载地址 Sequel Pro http://www.sequelpro.com/ SourceTree https://www.sourcetreeapp.com/ Microsoft Remote Desktop for Mac 官方下载 Keka https://www.keka.io/zh-cn/ Linux 软件名 下载地址 WPS http://linux.wps.cn/ 在线 软件名 地址 稿定抠图 https://www.gaoding.com/koutu ss-pane https://github.com/mmmwhy/ss-panel-and-ss-py-mu 字符图像 http://patorjk.com/software/taag/"}],"posts":[{"title":"Surface GO 使用U盘驱动器 初始化 安装 恢复 Windows 10操作系统","slug":"machine/Surface GO 使用U盘驱动器 初始化 安装 恢复 Windows 10操作系统","date":"2019-11-06T08:05:00.000Z","updated":"2020-01-03T07:23:19.905Z","comments":true,"path":"2019/11/06/","link":"","permalink":"https://ruibty.github.io/2019/11/06/","excerpt":"写在前面说真的，网上很多教程都是错的！ 有的说直接使用msdn最新Win10镜像的，这个我试了。需要自己解决激活问题，并且网上清一色的用三方PE，几乎没有msdn原版安装！ 有的推荐使用Ghost安装各种国产封装的，这个不解释了。 淘宝也有给出付费教程和下载链接的，然而镜像SHA1和微软官方对不上，最起码到今天（2019/11/05）对不上！ msdn原版iso镜像与Surface官方zip压缩包的区别： msdn原版iso镜像可以安装的版本众多，Surface官方zip压缩包是家庭版 Surface官方zip压缩包的系统可以直接激活 Surface官方zip压缩包的系统内置office 2016，但是需要另外激活 这篇文章旨在分享： 下载原味的系统镜像 制作和使用启动恢复驱动器/系统安装U盘","text":"写在前面说真的，网上很多教程都是错的！ 有的说直接使用msdn最新Win10镜像的，这个我试了。需要自己解决激活问题，并且网上清一色的用三方PE，几乎没有msdn原版安装！ 有的推荐使用Ghost安装各种国产封装的，这个不解释了。 淘宝也有给出付费教程和下载链接的，然而镜像SHA1和微软官方对不上，最起码到今天（2019/11/05）对不上！ msdn原版iso镜像与Surface官方zip压缩包的区别： msdn原版iso镜像可以安装的版本众多，Surface官方zip压缩包是家庭版 Surface官方zip压缩包的系统可以直接激活 Surface官方zip压缩包的系统内置office 2016，但是需要另外激活 这篇文章旨在分享： 下载原味的系统镜像 制作和使用启动恢复驱动器/系统安装U盘 正文开始使用msdn原版iso镜像安装这个非常简单，安装教程网上一搜很多，简单说一下 下载iso文件 使用Rufus制作系统安装U盘 开机的时候按住音量+，进入BIOS，关闭Security Boot 然后启动安装即可。 使用surface官方zip压缩包安装下载恢复镜像官网下载地址 https://support.microsoft.com/zh-cn/surfacerecoveryimage 选择产品、输入序列号之后，就可以进行下载。 我的设备是Surface GO 8G 128G， 截止到今天（2019/11/05），官网给出的最新镜像是： 1Surface Go - 128GB 4415Y 8GB M1824 - Windows 10 Home in S Mode Version 1809 你可以直接下载，或者尝试我的百度云链接： 1链接: https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1MPa73sC9PkCMrxAdVol7dA 提取码: 9yvf SurfaceGo_BMR_41_2.001.2.zip 123MD5: 50C49BF7AFF0460357BD3477DB6460EASHA1: 1E0174AAC7F39650140A1B93928339D6D307DCE0CRC32: 72832571 你需要准备的，除了系统安装镜像，还有一个大于等于8G（强烈推荐16G及以上！）的U盘。 制作“启动恢复U盘”参考官网的方法：https://support.microsoft.com/en-us/help/4026852/windows-create-a-recovery-drive 使用Windows的任务栏搜索“恢复驱动器/Create a recovery drive”，打开应用。 取消默认勾选的“将系统文件备份到恢复驱动器” 选择你的U盘，确认风险提示，等待“恢复驱动器已就绪”的提示 将下载好的.zip压缩文件解压到U盘根目录，如果提示覆盖，那就覆盖。 恢复原始系统 以下二选一 设备彻底关机，按住“音量+”，短按电源，出现Logo就可以松手等待，进入Bios，选择启动顺序，也就是把USB移到最前面。 “开始菜单” -&gt; “设置” -&gt; “系统和安全” -&gt; “恢复” -&gt; “高级启动”，然后选择“使用设备” 进入“选择一个选项”页面，不要选择“使用设备”，选择“疑难解答”或者“高级选项”-&gt;“从驱动器恢复” 然后一步一步按照自己的需要，根据提示操作就得了！我选择的是“完全清理驱动器”-&gt;“恢复” 常见问题什么是“S Mode”？简单的说，S Mode是一种限制了部分种类的软件安装和运行的使用模式，限制带来的好处就是“安全性”、“省电”、“稳定”之类的，就好比“开放的Android”和“封闭的iOS”。千万不要认为这个是所谓的“大平板”模式、不能具有传统桌面，有的！ 如何破除“S Mode”的限制？运行部分软件，例如运行CMD之类，会提示“出于安全和性能方面的原因，此Windows模式只运行Microsoft Store中经过验证的应用”，点击“查看操作方法”，会来到Microsoft Store中，然后点击“获取”来退出安全模式。 如何还原？使用“启动恢复U盘”删除所有！ 为什么要用这个定制版的Windows 10 Home？ 孱弱的处理器和Surface的产品定位，谁都不愿意你在这个工具上尝试“工作站”的角色，“Home”版已然足够并且最适合。 自带Office 2016 还有要说的吗？强烈建议安装完成之后： 使用系统自带的“开始菜单” -&gt; “设置” -&gt; “系统和安全”更新最新系统，我经过N次更新和重启，已经升级到最新的1903了（当然，这个是截止到今天最新，而且我也不知道为啥微软没有放出下载链接，如果有，请提醒我）。 更新完毕之后，（推荐）设置搜索“存储” -&gt; “临时文件”或者Dism++清理没用的文件。","categories":[{"name":"Machine/机器","slug":"Machine-机器","permalink":"https://ruibty.github.io/categories/Machine-%E6%9C%BA%E5%99%A8/"}],"tags":[{"name":"Win10","slug":"Win10","permalink":"https://ruibty.github.io/tags/Win10/"},{"name":"Surface","slug":"Surface","permalink":"https://ruibty.github.io/tags/Surface/"}]},{"title":"Windows下利用cwRsync同步Linux源并排除目录","slug":"Windows下利用cwRsync同步Linux源","date":"2019-04-22T08:05:00.000Z","updated":"2019-12-25T06:58:53.580Z","comments":true,"path":"2019/04/22/","link":"","permalink":"https://ruibty.github.io/2019/04/22/","excerpt":"接触Linux的开发者一定知道国内源的意义是啥。 本文的目的是想要在本地建立一个Linux的源，同时排除老旧的版本。为方便起见，本文使用CentOS为例，使用了清华大学的源做为数据来源。","text":"接触Linux的开发者一定知道国内源的意义是啥。 本文的目的是想要在本地建立一个Linux的源，同时排除老旧的版本。为方便起见，本文使用CentOS为例，使用了清华大学的源做为数据来源。 下载软件本例使用的是cwRsync这个软件，仅使用客户端即可。搜索引擎说官网有免费版下载，然而我并没有找到。 没办法拿到官网最新的下载，退而求其次，搜索到v5.5.0这个版本。如果你能找到新版或者弄出来官网下载连接，请联系我，非常感谢！ 软件使用 下载好软件，解压到你喜欢到地方，我解压到了 1C:\\cwRsync 建立排除文件我是在C:\\cwRsync下建立了centos_excluded文件 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616222.1&#x2F;33.13.33.43.53.63.73.83.9&#x2F;44.0&#x2F;4.1&#x2F;4.2&#x2F;4.3&#x2F;4.4&#x2F;4.5&#x2F;4.6&#x2F;4.7&#x2F;4.8&#x2F;4.9&#x2F;55.0&#x2F;5.1&#x2F;5.10&#x2F;5.11&#x2F;5.2&#x2F;5.3&#x2F;5.4&#x2F;5.5&#x2F;5.6&#x2F;5.7&#x2F;5.8&#x2F;5.9&#x2F;66.0&#x2F;6.1&#x2F;6.10&#x2F;6.2&#x2F;6.3&#x2F;6.4&#x2F;6.5&#x2F;6.6&#x2F;6.7&#x2F;6.8&#x2F;6.9&#x2F;77.0.1406&#x2F;7.1.1503&#x2F;7.2.1511&#x2F;7.3.1611&#x2F;7.4.1708&#x2F;7.5.1804&#x2F;RPM-GPG-KEY-CentOS-3RPM-GPG-KEY-CentOS-4RPM-GPG-KEY-CentOS-5RPM-GPG-KEY-CentOS-6RPM-GPG-KEY-CentOS-Debug-6RPM-GPG-KEY-CentOS-Security-6RPM-GPG-KEY-CentOS-Testing-6RPM-GPG-KEY-centos4 使用定时任务运行脚本 创建脚本文件：mirrors.bat 12345@echo offC:\\cwRsync\\bin\\rsync -alz --exclude-from&#x3D;&#x2F;cygdrive&#x2F;c&#x2F;cwRsync&#x2F;centos_excluded rsync:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;centos&#x2F; &#x2F;cygdrive&#x2F;d&#x2F;www&#x2F;mirrors&#x2F;centos&#x2F;mklink &#x2F;D D:\\www\\mirrors\\centos\\7 D:\\www\\mirrors\\centos\\7.6.1810 然后利用Windows系统的。”计划任务”进行定时重复检查同步，当然了，你还需要一个Http服务器，这个网上一大堆，各种个样的实现方法，我就不复制粘贴了。 配置客户端123456789101112131415161718192021222324252627282930313233343536mv &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo.bakcat &lt;&lt;EOF &gt;&gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo[base]name&#x3D;CentOS-$releasever - Basebaseurl&#x3D;http:&#x2F;&#x2F;192.168.1.80&#x2F;mirrors&#x2F;centos&#x2F;$releasever&#x2F;os&#x2F;$basearch&#x2F;#mirrorlist&#x3D;http:&#x2F;&#x2F;mirrorlist.centos.org&#x2F;?release&#x3D;$releasever&amp;arch&#x3D;$basearch&amp;repo&#x3D;osgpgcheck&#x3D;1gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-CentOS-7#released updates[updates]name&#x3D;CentOS-$releasever - Updatesbaseurl&#x3D;http:&#x2F;&#x2F;192.168.1.80&#x2F;mirrors&#x2F;centos&#x2F;$releasever&#x2F;updates&#x2F;$basearch&#x2F;#mirrorlist&#x3D;http:&#x2F;&#x2F;mirrorlist.centos.org&#x2F;?release&#x3D;$releasever&amp;arch&#x3D;$basearch&amp;repo&#x3D;updatesgpgcheck&#x3D;1gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-CentOS-7#additional packages that may be useful[extras]name&#x3D;CentOS-$releasever - Extrasbaseurl&#x3D;http:&#x2F;&#x2F;192.168.1.80&#x2F;mirrors&#x2F;centos&#x2F;$releasever&#x2F;extras&#x2F;$basearch&#x2F;#mirrorlist&#x3D;http:&#x2F;&#x2F;mirrorlist.centos.org&#x2F;?release&#x3D;$releasever&amp;arch&#x3D;$basearch&amp;repo&#x3D;extrasgpgcheck&#x3D;1gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-CentOS-7#additional packages that extend functionality of existing packages[centosplus]name&#x3D;CentOS-$releasever - Plusbaseurl&#x3D;http:&#x2F;&#x2F;192.168.1.80&#x2F;mirrors&#x2F;centos&#x2F;$releasever&#x2F;centosplus&#x2F;$basearch&#x2F;#mirrorlist&#x3D;http:&#x2F;&#x2F;mirrorlist.centos.org&#x2F;?release&#x3D;$releasever&amp;arch&#x3D;$basearch&amp;repo&#x3D;centosplusgpgcheck&#x3D;1enabled&#x3D;0gpgkey&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;RPM-GPG-KEY-CentOS-7EOF","categories":[{"name":"Windows","slug":"Windows","permalink":"https://ruibty.github.io/categories/Windows/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://ruibty.github.io/tags/Windows/"}]},{"title":"Android-APK瘦身技术 减小软件安装包体积","slug":"Android-APK瘦身技术 减小软件安装包体积","date":"2019-03-07T08:05:00.000Z","updated":"2019-12-25T06:58:53.577Z","comments":true,"path":"2019/03/07/","link":"","permalink":"https://ruibty.github.io/2019/03/07/","excerpt":"原文：https://blog.csdn.net/Peterpan1223/article/details/67653792","text":"原文：https://blog.csdn.net/Peterpan1223/article/details/67653792 辅助分析工具在线网站：https://nimbledroid.com/ 能够得知app内存使用，网络使用，磁盘输入/输出，文件大小等一些数据 无需翻墙，但是访问比较慢 需要注册 apk的组成 classes.dex java源码编译后生成的java字节码文件 resources.arsc 编译后的布局文件 AndroidMainfest.xml assets 目录，存放一些配置文件 lib 目录，子目录armebin存放的是一些so文件或者jar包 META-INF目录下存放的是签名信息，用来保证apk包的完整性和系统的安全 res apk图片资源 瘦身开始1. 开启minifyEnabled 开启混淆 删除没用的类（文件）和方法 代码压缩 1234567buildTypes &#123; ...... debug &#123; minifyEnabled true proguardFiles getDefaultProguardFile(&#39;proguard-android-optimize.txt&#39;), &#39;proguard-rules.pro&#39; &#125;&#125; 混淆规则proguard使用注意 类型转换错误，使用Gson之类的需要注意 1-keepattributes Signature 忽略警告 1-ignorewarnings webview中js和本地代码有叫交互，保持“桥梁类”不被混淆 1234-keepclassmembers class com.xxx.xxxx.xxxx.HuodongBeBindedToJS&#123; public *;&#125; 第三方包不被混淆 123#-libraryjars &#x2F;libs&#x2F;core.jar-dontwarn com.google.zxing.**-keep class com.google.zxing.** &#123; *;&#125; 常见第三方包123456789101112131415161718192021222324252627282930313233#zxing#-libraryjars &#x2F;libs&#x2F;core.jar-dontwarn com.google.zxing.**-keep class com.google.zxing.** &#123; *;&#125;#支付宝#-libraryjars &#x2F;libs&#x2F;alipay_sdk.jar-dontwarn com.alipay.android.app.**-keep class com.alipay.android.app.** &#123;*;&#125;#友盟#-libraryjars &#x2F;libs&#x2F;umeng_sdk.jar-dontwarn com.umeng.**-keep class com.umeng.** &#123; *;&#125;-keepclassmembers class * &#123; public &lt;init&gt;(org.json.JSONObject); &#125;-keep public class com.hyx.maizuo.main.R$*&#123; public static final int *; &#125;-keep public class com.umeng.fb.ui.ThreadView &#123; &#125;#百度地图#-libraryjars &#x2F;libs&#x2F;baidumapapi.jar-dontwarn com.baidu.mapapi.**-keep class com.baidu.mapapi.** &#123; *;&#125;#fastJson#-libraryjars &#x2F;libs&#x2F;fastjson-1.1.20.jar-dontwarn com.alibaba.fastjson.**-keep class com.alibaba.fastjson.** &#123; *;&#125;#微信#-libraryjars &#x2F;libs&#x2F;libammsdk.jar-dontwarn com.tencent.mm.sdk.**-keep class com.tencent.mm.sdk.** &#123;*;&#125; 示例 proguard-rules.pro文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108# Add project specific ProGuard rules here.# By default, the flags in this file are appended to flags specified# in D:\\ProgramFiles\\Android\\sdk&#x2F;tools&#x2F;proguard&#x2F;proguard-android.txt# You can edit the include path and order by changing the proguardFiles# directive in build.gradle.## For more details, see# http:&#x2F;&#x2F;developer.android.com&#x2F;guide&#x2F;developing&#x2F;tools&#x2F;proguard.html# Add any project specific keep options here:# js调用android方法：window.映射字符串.callPhone(参数)# If your project uses WebView with JS, uncomment the following# and specify the fully qualified class name to the JavaScript interface# class:#-keepclassmembers class fqcn.of.javascript.interface.for.webview &#123;# public *;#&#125;# 配置代码混淆 默认生成-optimizationpasses 5 # 指定代码的压缩级别-dontusemixedcaseclassnames # 是否使用大小写混合-dontpreverify # 混淆时是否做预校验-verbose # 混淆时是否记录日志-optimizations !code&#x2F;simplification&#x2F;arithmetic,!field&#x2F;*,!class&#x2F;merging&#x2F;* # 混淆时所采用的算法-keep public class * extends android.app.Activity # 保持哪些类不被混淆-keep public class * extends android.app.Application # 保持哪些类不被混淆-keep public class * extends android.app.Service # 保持哪些类不被混淆-keep public class * extends android.content.BroadcastReceiver # 保持哪些类不被混淆-keep public class * extends android.content.ContentProvider # 保持哪些类不被混淆-keep public class * extends android.app.backup.BackupAgentHelper # 保持哪些类不被混淆-keep public class * extends android.preference.Preference # 保持哪些类不被混淆-keep public class com.android.vending.licensing.ILicensingService # 保持哪些类不被混淆-keepclasseswithmembernames class * &#123; # 保持 native 方法不被混淆 native &lt;methods&gt;;&#125;-keepclasseswithmembers class * &#123; # 保持自定义控件类不被混淆 public &lt;init&gt;(android.content.Context, android.util.AttributeSet);&#125;-keepclasseswithmembers class * &#123;# 保持自定义控件类不被混淆 public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);&#125;-keepclassmembers class * extends android.app.Activity &#123; # 保持自定义控件类不被混淆 public void *(android.view.View);&#125;-keepclassmembers enum * &#123; # 保持枚举 enum 类不被混淆 public static **[] values(); public static ** valueOf(java.lang.String);&#125;-keep class * implements android.os.Parcelable &#123; # 保持 Parcelable 不被混淆 public static final android.os.Parcelable$Creator *;&#125;#忽略警告-ignorewarnings# 保持属性不管-keepattributes Signature# 第三方jar包不混淆#zxing-dontwarn com.google.zxing.**-keep class com.google.zxing.** &#123; *;&#125;#gson-dontwarn com.google.gson.**-keep class com.google.gson.** &#123; *;&#125;#xutils-dontwarn com.lidroid.xutils.**-keep class com.lidroid.xutils.** &#123; *;&#125;#v4-dontwarn android.support.v4.**-keep class android.support.v4.** &#123; *;&#125;#v7-dontwarn android.support.v7.**-keep class android.support.v7.** &#123; *;&#125;#annotation-dontwarn android.support.annotation.**-keep class android.support.annotation.** &#123; *;&#125;-dontwarn android.net.**-keep class android.net.** &#123; *;&#125;# tencent-dontwarn com.tencent.**-keep class com.tencent.** &#123;*;&#125;# umeng-dontwarn com.umeng.socialize.**-keep class com.umeng.socialize.** &#123;*;&#125;-dontwarn org.apache.**-keep class org.apache.** &#123; *;&#125;-dontwarn com.android.internal.http.multipart.**-keep class com.android.internal.http.multipart.** &#123; *;&#125;# java bean不能混淆-keep class com.xiangmu.wyxw.Bean.** &#123;*;&#125; 2. 开启shrinkResources去除无用的资源，包括工程中临时展示的图片 12345debug &#123; minifyEnabled true shrinkResources true proguardFiles getDefaultProguardFile(&#39;proguard-android.txt&#39;), &#39;proguard.cfg&#39;&#125; *3. 删除无用的语言资源12345defaultConfig &#123; ... resConfigs &quot;zh&quot; ...&#125;","categories":[{"name":"Android","slug":"Android","permalink":"https://ruibty.github.io/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://ruibty.github.io/tags/Android/"}]},{"title":"使用adb不用root免解锁干掉Android预置应用","slug":"使用adb不用root免解锁干掉Android预置应用","date":"2019-01-19T08:05:00.000Z","updated":"2019-12-25T06:58:53.581Z","comments":true,"path":"2019/01/19/","link":"","permalink":"https://ruibty.github.io/2019/01/19/","excerpt":"虽然我日常使用还是Mac+iPad+iPhone，投入”电脑复制手机可以粘贴”的生态不可自拔，但是我还是很满意Android的。早些年，也折腾过Root，后来厂家有了bootloader锁，也跟风弄过。 为了干掉Android常规办法卸载不了的预置应用。通常要找Root工具，还要纯净的，Recovery或者Root管理应用里面带广告是不能忍的。为什么呢？我就是为了”减负”才搞系统应用的，当然不能去了狼引了虎。 然而现实是想要一个纯净的解锁工具太麻烦了，而且随着Android的更迭，这个过程也越来越繁琐，这也是我后来入坑iPhone的原因。 好啦，直入今天的主题吧，来聊一聊如何省掉以上的步骤，直接干掉系统预置应用。","text":"虽然我日常使用还是Mac+iPad+iPhone，投入”电脑复制手机可以粘贴”的生态不可自拔，但是我还是很满意Android的。早些年，也折腾过Root，后来厂家有了bootloader锁，也跟风弄过。 为了干掉Android常规办法卸载不了的预置应用。通常要找Root工具，还要纯净的，Recovery或者Root管理应用里面带广告是不能忍的。为什么呢？我就是为了”减负”才搞系统应用的，当然不能去了狼引了虎。 然而现实是想要一个纯净的解锁工具太麻烦了，而且随着Android的更迭，这个过程也越来越繁琐，这也是我后来入坑iPhone的原因。 好啦，直入今天的主题吧，来聊一聊如何省掉以上的步骤，直接干掉系统预置应用。 如何操作 手机打开开发者模式，一般是在关于手机里面连续点击版本号，如果不清楚，请百度”你的手机型号 + 如何打开开发者模式”。在开发者模式中选择”开启USB调试”，我一般还同时勾选”允许仅充电调试”； 我的电脑是有安装Android Studio开发环境的，其他情况请自行下载Adb或者安装Android SDK（内置了sdk工具）； 我的adb存放在”～/Library/Android/sdk/platform-tools”下，其他情况请自行定位，进入目录，执行： 1.&#x2F;adb shell 进入手机的shell环境 执行一下，输出手机的程序包名列表： 1pm list packages 也可以只输出系统预置命令，就是加一个参数”-s” 1pm list packages -s 其他参数意义请自行使用手册意义 最后，用指定包名的形式卸载： 1pm uninstall --user 0 $&#123;packageName&#125; 补充说明的事： 华为手机的abd默认为华为定制，需要进入工程模式选择Google模式才连得上：在拨号界面输入 1*#*#2846579#*#* 可以进行选择； 这个方法在恢复出厂设置的时候会恢复已经删除的程序列表。 如果有安全需要，操作完成后建议你关闭调试、关闭开发者模式。 附上我的一台emui8.0的删除列表，仅做示例参考123456789101112131415161718192021222324252627282930313233343536373839# 华为视频pm uninstall --user 0 com.huawei.himoviepm uninstall --user 0 com.huawei.health# 华为钱包pm uninstall --user 0 com.huawei.wallet# 手表同步pm uninstall --user 0 com.huawei.watch.sync# 华为穿戴pm uninstall --user 0 com.huawei.bonepm uninstall --user 0 com.vmall.clientpm uninstall --user 0 com.huawei.skytonepm uninstall --user 0 com.android.hwmirror# 驾驶模式pm uninstall --user 0 com.huawei.vdrivepm uninstall --user 0 com.huawei.fans# 语音助手pm uninstall --user 0 com.huawei.vassistant# 音乐pm uninstall --user 0 com.android.mediacenter# 会员服务pm uninstall --user 0 com.huawei.phoneservice# 浏览器，反正我是干掉了，用的viapm uninstall --user 0 com.android.browser# 查找我的手机pm uninstall --user 0 com.huawei.android.findmyphone","categories":[{"name":"Android","slug":"Android","permalink":"https://ruibty.github.io/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://ruibty.github.io/tags/Android/"}]},{"title":"常见路由器多级设置-路由器下面怎么再接一个路由器","slug":"machine/常见路由器多级设置-路由器下面怎么再接一个路由器","date":"2018-12-30T08:05:00.000Z","updated":"2019-12-25T06:58:53.581Z","comments":true,"path":"2018/12/30/","link":"","permalink":"https://ruibty.github.io/2018/12/30/","excerpt":"这个事情很古老，也总有亲友问，自己总结的文章，希望尽量简单的解决大部分问题。适用于一般家用路由器","text":"这个事情很古老，也总有亲友问，自己总结的文章，希望尽量简单的解决大部分问题。适用于一般家用路由器 路由器下面接路由器，一般有2个方式一般来说，所有的Lan口都是平等的，并无顺序区别，也就是说同一路由的Lan口都可以调换位置，而Lan与Wan不能。本文中没有提及或者图示空的Lan口均可以接电脑或者其他网络设备； 路由下面设置次级路由为交换机；(推荐) 这种设置，为1个局域网，也就是A路由下面的电脑和B路由下面的电脑可以无缝实现文件共享或者打印机等； A路由Wan口接网线，A路由设置好拨号上网，假设A路由的Lan口管理IP为192.168.1.1； B路由更改Lan口管理IP为同网络保留IP（不容易被A路由的DHCP分配到的IP），比如192.168.1.250等，并且B路由关闭DHCP，设置好重启一下； 按图示，A路由Lan口一个接到B路由的Lan口。 这种设置一般是小型网络，B路由当交换机用； 路由下面设置另外一个局域网路由； 这种设置，其实是2个局域网，也就是A路由下面的电脑和B路由下面的电脑不容易实现文件共享或者打印机等； A路由Wan口接网线，A路由设置好拨号上网，假设A路由的Lan口管理IP为192.168.1.1； B路由更改Lan口管理IP为其他网段，比如192.168.2.1或者10.0.0.1等，并且B路由上网方式为自动获取IP，设置好重启一下； 按图示，A路由Lan口一个接到B路由的Wan口。 这种设置一般用于大一些的网络环境，因为可以分配给设备的IP地址会很多，并且B路由参与转发，能分担A路由的负载； 几个常见概念介绍 一般路由器的接口，除了电源之外，最重要的是： Wan口：图中蓝色口通常是1个，也有的有2个或者多个 Lan口：图中黄色的口一般是4个，也有2个或者其他数量的 DHCP：简单说是给所属设备（电脑或者连接的手机）分配IP的服务。一般是由小到大的，比如路由器IP为192.168.1.1，那么默认分布是从192.168.1.2开始，最大到192.168.1.255。大部分路由可以设定分配IP区间，比如只分配192.168.1.100-192.168.1.200","categories":[{"name":"Machine/机器","slug":"Machine-机器","permalink":"https://ruibty.github.io/categories/Machine-%E6%9C%BA%E5%99%A8/"}],"tags":[{"name":"路由器","slug":"路由器","permalink":"https://ruibty.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"}]},{"title":"最近的败家-钢笔及钢笔的打磨","slug":"最近的败家-钢笔及钢笔的打磨","date":"2018-12-29T08:05:00.000Z","updated":"2019-12-25T06:58:53.582Z","comments":true,"path":"2018/12/29/","link":"","permalink":"https://ruibty.github.io/2018/12/29/","excerpt":"我也没有收藏癖好，办公和考试也是拿着中性笔。我只是单纯的喜欢钢笔的那种仪式感，单纯的喜欢而已。","text":"我也没有收藏癖好，办公和考试也是拿着中性笔。我只是单纯的喜欢钢笔的那种仪式感，单纯的喜欢而已。 购物清单先不上图了，有需要或者有时间再上吧。以下按照购买顺序由早到晚。 凌美 狩猎者 EF尖 1支 英雄 616 黄尖 英雄 616 银尖 百乐 78G+ F尖 百乐 笑脸 永生 活塞 0.38 白金 PSQC-400 烂笔头3066（仿百乐贵妃）； 施耐德 BK406 烂笔头 757（仿凌美的那种）； 国产凌美（仿凌美的那种，赠品）； 白金 PPQ200，2支 百乐 FR-50R 贵妃 英雄266 特细（上海原厂） 英雄266 特细（丽水） 英雄266 美工笔 永生 活塞 0.38直到今天我都怀疑是不是买假了，怎么说好咧？这玩意握起来感觉就好像握了一个注射器，粗的都比0.5都过分，我忍了，不到一个月，竟然开始以肉眼可见的速度漏墨。嗯，不该ren了的，应该reng了的。 国产凌美（仿凌美的那种，赠品）本来是店家搞活动，买100个墨囊送了一支钢笔，没想到意外的好用，如果不去想她单薄的外壳和简略的做工，我甚至怀疑起原版凌美的实力。 心心念啊心心念。 店家说钢笔不单卖，必须买够100支墨囊才有。我就去阿里巴巴找最便宜的钢笔批发商，心想赠品出身和那个工料应该不会贵，认真对比和仔细揣摩后，一口气买了5支。 让人意外的是，这放在一起无法分辨的五胞胎竟有着不同的表现…算上原来的，共有6种风格。 想来错的是我，不该贪得无厌，就不该在一次幸运之后期许更多。 相见不如怀念，相濡以沫不如相忘于江湖。 总结下心得：其实现在国内很多品牌的很多型号，都是类似的生产线或者直接有代工厂的，尽管品牌不同，但实际上手感、品控等同质化很严重。所以不用每一个坑都跳。 千万慎重选择那些淘宝文案不错，喜欢用彩墨罐装无名透明钢笔的个人店铺，公模而已。 洇字这个问题，笔、墨、纸都可能有关系。 如果你的钢笔你挺喜欢或者还不错，总之有价值的，建议尽量不要用碳素墨水。 喜欢用透明壳子的尽量用墨囊，用吸墨器会导致结构处不必要的地方沾墨，影响美观，用笔杆灌墨因为压力问题，可能会导致漏墨。 觉得粗了可以夹一下笔尖，觉得细了可以用细刀片划一下中缝，这玩意是消耗品，坏了再买就是，不用因为买了便宜货就去刁难卖家。 把心思用在写字和做事上，钢笔只是一个工具而已，要用它来成就自己，而不是自己去成就它。 这玩意还真不是一分钱一分货，比如我就非常喜欢买墨囊送的那支钢笔，意外的好用。 附录：钢笔墨囊规格默认单位：毫米。数据为个人收集，仅供参考，也欢迎你帮我补充。 接口内径 接口外径 总长度 墨囊外经 适应品牌 典型型号 3.4 5 50 8 晨光、爱好、英雄、白雪 英雄359 2.6 4 52 6 英雄、晨光、永生、罗氏、依人 英雄卡通3159-3169、382、6160、7053、6006 6 8 60 百乐 IC-50 2 4 38 施耐德、马培德、万宝龙、红环、百利金、施德楼、辉柏嘉、Kaweco 欧标 打磨丑话说前头：要想清楚自己为什么要这么做，尽量少做没有意义的事情；如果觉得手不是那么巧的，就算了，别往下看了，因为下面的行为，我自己都怀疑是不是”毁笔”。 我贪恋于百乐、长刀研之流的手感与理念，同时喜欢国产钢笔的实惠（不仅仅笔杆子，墨囊价格也非常实惠），即得陇且望蜀，通过打磨，调和出适合自己的口味。 所需材料： 打磨油石（我都是3000#/10000#双面） 放大镜（买的是20倍镜，但是我感觉效果没参数漂亮） 目标钢笔 图就先不上了，理由如上，这次仓促，有时间或者有需要再补。 说结果吧： 10000目对于”想要提升”钢笔的顺滑度来说，还是太粗了，而且我的油石用了几下，表面变得粗糙起来，导致后面的打磨更加不理想。建议想上车的朋友选择更好的材质，有条件的建议尝试更细的材质； 本来是奔着长刀研的手感去的，最后磨坏了一个笔尖后就放弃了，时间成本不合适。 修复了一支国产钢笔飞白的毛病，这个很完美。（首先在至上画8，找到飞白出现的角度，针对性的打磨，切记磨一下试三下，小心谨慎）。","categories":[{"name":"个人爱好","slug":"个人爱好","permalink":"https://ruibty.github.io/categories/%E4%B8%AA%E4%BA%BA%E7%88%B1%E5%A5%BD/"}],"tags":[{"name":"爱好","slug":"爱好","permalink":"https://ruibty.github.io/tags/%E7%88%B1%E5%A5%BD/"}]},{"title":"FreeSWITCH的rpm安装和配置MySQL存储用户并使之支持视频通话","slug":"FreeSWITCH的rpm安装和配置MySQL存储用户并使之支持视频通话","date":"2018-12-04T08:05:00.000Z","updated":"2019-12-25T06:58:53.577Z","comments":true,"path":"2018/12/04/","link":"","permalink":"https://ruibty.github.io/2018/12/04/","excerpt":"网上其他貌似都是源码方式安装的，这里我来一发rpm安装和简单配置。","text":"网上其他貌似都是源码方式安装的，这里我来一发rpm安装和简单配置。 官网的文档，其实已经很详尽了。这里仅仅是我个人走过的一些坑的介绍。 截至到当前，最新版的稳定版是1.6，测试版好像是更新到了1.9（如果你想体验，请使用源码编译安装方式，但是目前官方还是标注”WARNING not suitable for production”）。 我的环境是CentOS7 + FreeSWITCH1.6 + Mariadb5.5.6，如果你的环境和我一样，那么你可能可以直接复制我的代码。 安装FreeSWITCHhttps://freeswitch.org/confluence/display/FREESWITCH/Installation 1234yum install -y http:&#x2F;&#x2F;files.freeswitch.org&#x2F;freeswitch-release-1-6.noarch.rpm epel-releaseyum install -y freeswitch-config-vanilla freeswitch-lang-* freeswitch-sounds-*systemctl enable freeswitchsystemctl start freeswitch 配置数据库https://freeswitch.org/confluence/display/FREESWITCH/Using+ODBC+in+the+core unixODBC是一个可以让你在Unix/Linux系统下使用ODBC来连接数据库的组件，就像java中的mysql-connector-java-5.1.6-bin.jar一样，负责连接数据库的。 12345yum install -y unixODBC-devel mysql-connector-odbc mariadb-server systemctl enable mariadbsystemctl start mariadbmysql_secure_installation MySQL数据库中，创建freeswitch数据库，添加如下的表，并插入元素： 12345678910111213141516171819202122232425262728293031CREATE DATABASE IF NOT EXISTS freeswitch default charset utf8 COLLATE utf8_general_ci;drop table if exists &#96;users&#96;;CREATE TABLE IF NOT EXISTS &#96;users&#96; ( &#96;user_id&#96; int(11) NOT NULL AUTO_INCREMENT, &#96;domain&#96; varchar(90) NOT NULL COMMENT &#39;域&#39;, &#96;sip_id&#96; varchar(90) NOT NULL COMMENT &#39;音视频聊天ID&#39;, &#96;mail_box&#96; varchar(90) NOT NULL COMMENT &#39;邮箱&#39;, &#96;number_alias&#96; varchar(90) NOT NULL COMMENT &#39;&#39;, &#96;pass_word&#96; varchar(255) NOT NULL COMMENT &#39;密码&#39;, &#96;dial_string&#96; varchar(90) NOT NULL COMMENT &#39;&#39;, &#96;user_context&#96; varchar(90) NOT NULL COMMENT &#39;&#39;, &#96;author_id&#96; int(11) NOT NULL COMMENT &#39;作者&#39;, &#96;create_time&#96; int(11) NOT NULL COMMENT &#39;创建时间&#39;, &#96;del_time&#96; int(11) NOT NULL COMMENT &#39;删除时间&#39;, &#96;handler_id&#96; int(11) NOT NULL COMMENT &#39;处理人&#39;,PRIMARY KEY (&#96;user_id&#96;),KEY &#96;sip_id&#96; (&#96;sip_id&#96;),KEY &#96;author_id&#96; (&#96;author_id&#96;),KEY &#96;create_time&#96; (&#96;create_time&#96;),KEY &#96;del_time&#96; (&#96;del_time&#96;),KEY &#96;handler_id&#96; (&#96;handler_id&#96;)) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 ROW_FORMAT&#x3D;DYNAMIC COMMENT&#x3D;&#39;用户&#39;; INSERT INTO &#96;users&#96; VALUES (1, &#39;&#39;, &#39;8001&#39;, &#39;&#39;, &#39;&#39;, &#39;2345&#39;, &#39;&#39;, &#39;default&#39;, 0, unix_timestamp(now()), 0, 0), (2, &#39;&#39;, &#39;8002&#39;, &#39;&#39;, &#39;&#39;, &#39;2345&#39;, &#39;&#39;, &#39;default&#39;, 0, unix_timestamp(now()), 0, 0), (3, &#39;&#39;, &#39;8003&#39;, &#39;&#39;, &#39;&#39;, &#39;2345&#39;, &#39;&#39;, &#39;default&#39;, 0, unix_timestamp(now()), 0, 0), (4, &#39;&#39;, &#39;8004&#39;, &#39;&#39;, &#39;&#39;, &#39;2345&#39;, &#39;&#39;, &#39;default&#39;, 0, unix_timestamp(now()), 0, 0); 配置要连接的数据库信息 -&gt; /etc/odbc.inihttps://freeswitch.org/confluence/display/FREESWITCH/Using+ODBC+in+the+core 请按自己的需要，修改自己的信息 123456789cat &lt;&lt;EOF &gt;&gt; &#x2F;etc&#x2F;odbc.ini[freeswitch]Driver &#x3D; &#x2F;usr&#x2F;lib64&#x2F;libmyodbc5.soSERVER &#x3D; localhostPORT &#x3D; 3306DATABASE &#x3D; freeswitchUSER &#x3D; $&#123;数据库账户&#125;PASSWORD &#x3D; $&#123;数据库密码&#125;EOF 修改之后，执行 1isql -v freeswitch 如果出现 123456789+---------------------------------------+| Connected! || || sql-statement || help [tablename] || quit || |+---------------------------------------+SQL&gt; 代表你的unixodbc配置成功了 配置数据库-用户安装lua，用来处理用户 eg： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859yum install -y freeswitch-luavi &#x2F;etc&#x2F;freeswitch&#x2F;autoload_configs&#x2F;lua.conf.xml# 在适当的位置添加以下：&lt;param name&#x3D;&quot;xml-handler-script&quot; value&#x3D;&quot;gen_dir_user_xml.lua&quot;&#x2F;&gt;&lt;param name&#x3D;&quot;xml-handler-bindings&quot; value&#x3D;&quot;directory&quot;&#x2F;&gt;touch &#x2F;usr&#x2F;share&#x2F;freeswitch&#x2F;scripts&#x2F;gen_dir_user_xml.luacat &lt;&lt;EOF &gt;&gt; &#x2F;usr&#x2F;share&#x2F;freeswitch&#x2F;scripts&#x2F;gen_dir_user_xml.luafreeswitch.consoleLog(&quot;notice&quot;, &quot;Debug from gen_dir_user_xml.lua, provided params:\\n&quot; .. params:serialize() .. &quot;\\n&quot;) local req_domain &#x3D; params:getHeader(&quot;domain&quot;)local req_key &#x3D; params:getHeader(&quot;key&quot;)local req_user &#x3D; params:getHeader(&quot;user&quot;) assert (req_domain and req_key and req_user, &quot;This example script only supports generating directory xml for a single user !\\n&quot;) local dbh &#x3D; freeswitch.Dbh(&quot;odbc:&#x2F;&#x2F;freeswitch:root:815&quot;)if dbh:connected() &#x3D;&#x3D; false then freeswitch.consoleLog(&quot;notice&quot;, &quot;gen_dir_user_xml.lua cannot connect to database&quot; .. dsn .. &quot;\\n&quot;) returnend local my_query &#x3D; string.format(&quot;select * from users where del_time &#x3D; 0 and sip_id &#x3D;&#39;%s&#39; limit 1&quot;, req_user) assert (dbh:query(my_query, function(u) XML_STRING &#x3D;[[&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; standalone&#x3D;&quot;no&quot;?&gt;&lt;document type&#x3D;&quot;freeswitch&#x2F;xml&quot;&gt; &lt;section name&#x3D;&quot;directory&quot;&gt; &lt;domain name&#x3D;&quot;]] .. req_domain .. [[&quot;&gt; &lt;user id&#x3D;&quot;]] .. req_user .. [[&quot;&gt; &lt;params&gt; &lt;param name&#x3D;&quot;password&quot; value&#x3D;&quot;]] .. u.pass_word .. [[&quot;&#x2F;&gt; &lt;param name&#x3D;&quot;dial-string&quot; value&#x3D;&quot;&#123;sip_invite_domain&#x3D;$&#123;dialed_domain&#125;,presence_id&#x3D;$&#123;dialed_user&#125;@$&#123;dialed_domain&#125;&#125;$&#123;sofia_contact($&#123;dialed_user&#125;@$&#123;dialed_domain&#125;)&#125;&quot;&#x2F;&gt; &lt;&#x2F;params&gt; &lt;variables&gt; &lt;variable name&#x3D;&quot;user_context&quot; value&#x3D;&quot;]] .. u.user_context .. [[&quot;&#x2F;&gt; &lt;variable name&#x3D;&quot;toll_allow&quot; value&#x3D;&quot;domestic,international,local&quot;&#x2F;&gt; &lt;variable name&#x3D;&quot;accountcode&quot; value&#x3D;&quot;]] .. req_user .. [[&quot;&#x2F;&gt; &lt;variable name&#x3D;&quot;effective_caller_id_name&quot; value&#x3D;&quot;Extension ]] .. req_user .. [[&quot;&#x2F;&gt; &lt;variable name&#x3D;&quot;effective_caller_id_number&quot; value&#x3D;&quot;]] .. req_user .. [[&quot;&#x2F;&gt; &lt;variable name&#x3D;&quot;outbound_caller_id_name&quot; value&#x3D;&quot;&quot;&#x2F;&gt; &lt;variable name&#x3D;&quot;outbound_caller_id_number&quot; value&#x3D;&quot;&quot;&#x2F;&gt; &lt;variable name&#x3D;&quot;callgroup&quot; value&#x3D;&quot;techsupport&quot;&#x2F;&gt; &lt;&#x2F;variables&gt; &lt;&#x2F;user&gt; &lt;&#x2F;domain&gt; &lt;&#x2F;section&gt;&lt;&#x2F;document&gt;]] freeswitch.consoleLog(&quot;notice&quot;, &quot;Debug from gen_dir_user_xml.lua, generated XML:\\n&quot; .. XML_STRING .. &quot;\\n&quot;)end))EOF 让原来的xml验证用户的功能失效 12345678vi &#x2F;etc&#x2F;freeswitch&#x2F;directory&#x2F;default.xml# 删除的内容如下：&lt;group name&#x3D;&quot;default&quot;&gt; &lt;users&gt; &lt;X-PRE-PROCESS cmd&#x3D;&quot;include&quot; data&#x3D;&quot;default&#x2F;*.xml&quot;&#x2F;&gt; &lt;&#x2F;users&gt;&lt;&#x2F;group&gt; 修改拨号计划1vi &#x2F;etc&#x2F;freeswitch&#x2F;dialplan&#x2F;default.xml 添加如下内容，好让所有的拨号通过以下的条件 123456789&lt;extension name&#x3D;&quot;Local_Extension2&quot;&gt; &lt;condition field&#x3D;&quot;destination_number&quot; expression&#x3D;&quot;^([0-9][0-9][0-9][0-9])$&quot;&gt; &lt;action application&#x3D;&quot;export&quot; data&#x3D;&quot;dialed_extension&#x3D;$1&quot;&#x2F;&gt; &lt;action application&#x3D;&quot;set&quot; data&#x3D;&quot;call_timeout&#x3D;10&quot;&#x2F;&gt; &lt;action application&#x3D;&quot;set&quot; data&#x3D;&quot;hangup_after_bridge&#x3D;true&quot;&#x2F;&gt; &lt;action application&#x3D;&quot;set&quot; data&#x3D;&quot;continue_on_fail&#x3D;false&quot;&#x2F;&gt; &lt;action application&#x3D;&quot;bridge&quot; data&#x3D;&quot;user&#x2F;$&#123;dialed_extension&#125;@$&#123;domain_name&#125;&quot;&#x2F;&gt; &lt;&#x2F;condition&gt;&lt;&#x2F;extension&gt; 视频通话编辑文件 12345678vi &#x2F;etc&#x2F;freeswitch&#x2F;conf&#x2F;vars.xml#修改以下字样...&lt;X-PRE-PROCESS cmd&#x3D;&quot;set&quot; data&#x3D;&quot;global_codec_prefs&#x3D;OPUS,G722,PCMU,PCMA,VP8,H263,H264&quot;&#x2F;&gt;&lt;X-PRE-PROCESS cmd&#x3D;&quot;set&quot; data&#x3D;&quot;outbound_codec_prefs&#x3D;OPUS,G722,PCMU,PCMA,VP8,H263,H264&quot;&#x2F;&gt;... 再编辑文件 1234567vi &#x2F;etc&#x2F;freeswitch&#x2F;sip_profiles&#x2F;internal.xml#修改以下字样...&lt;param name&#x3D;&quot;inbound-proxy-media&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;...","categories":[{"name":"FreeSWITCH","slug":"FreeSWITCH","permalink":"https://ruibty.github.io/categories/FreeSWITCH/"}],"tags":[{"name":"FreeSWITCH","slug":"FreeSWITCH","permalink":"https://ruibty.github.io/tags/FreeSWITCH/"}]},{"title":"Linux Mint 美化","slug":"Linux Mint 美化","date":"2018-11-21T08:05:00.000Z","updated":"2019-12-25T06:58:53.578Z","comments":true,"path":"2018/11/21/","link":"","permalink":"https://ruibty.github.io/2018/11/21/","excerpt":"个人喜欢简洁一些的，基于LinuxMinx19通过。","text":"个人喜欢简洁一些的，基于LinuxMinx19通过。 其实我就装了一个Dock – Plank 123sudo add-apt-repository ppa:ricotz&#x2F;dockysudo apt-get updatesudo apt-get install plank 效果","categories":[{"name":"Linux","slug":"Linux","permalink":"https://ruibty.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://ruibty.github.io/tags/Linux/"}]},{"title":"Linux开发环境配置","slug":"Linux开发环境配置","date":"2018-11-20T08:05:00.000Z","updated":"2019-12-25T06:58:53.578Z","comments":true,"path":"2018/11/20/","link":"","permalink":"https://ruibty.github.io/2018/11/20/","excerpt":"个人配置","text":"个人配置 软件shadowsocks-qt5https://github.com/shadowsocks/shadowsocks-qt5/releases 12chmod a+x Shadowsocks-Qt5-x86_64.AppImagenohup .&#x2F;Shadowsocks-Qt5-x86_64.AppImage GenPAChttps://github.com/JinnLynn/genpac 12345# 安装或更新$ pip install -U genpac# 生成pac文件genpac --pac-proxy &quot;SOCKS5 127.0.0.1:1080&quot; --gfwlist-proxy&#x3D;&quot;SOCKS5 127.0.0.1:1080&quot; --gfwlist-url&#x3D;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;gfwlist&#x2F;gfwlist&#x2F;master&#x2F;gfwlist.txt --output&#x3D;&quot;&#x2F;opt&#x2F;autoproxy.pac&quot; 设置全局pac代理 1file:&#x2F;&#x2F;&#x2F;opt&#x2F;autoproxy.pac","categories":[{"name":"Linux","slug":"Linux","permalink":"https://ruibty.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://ruibty.github.io/tags/Linux/"}]},{"title":"Gradle,Maven,Homebrew,npm,Ruby,Docker,pip设置国内镜像加速","slug":"Gradle,Maven,Homebrew,npm,Ruby,Docker设置国内镜像加速","date":"2018-11-19T08:05:00.000Z","updated":"2019-12-25T06:58:53.577Z","comments":true,"path":"2018/11/19/","link":"","permalink":"https://ruibty.github.io/2018/11/19/","excerpt":"修改镜像的目的，不是为了简单的突破封锁，而是获得更快的下载速度。千万注意根据个人实际需要修改相应路径。","text":"修改镜像的目的，不是为了简单的突破封锁，而是获得更快的下载速度。千万注意根据个人实际需要修改相应路径。 GradleGradle的初始化脚本(Initialization Scripts)，也是运行时的全局配置。更详细的介绍请参阅 http://gradle.org/docs/current/userguide/init_scripts.html 12345678910111213141516171819touch ~&#x2F;.gradle&#x2F;init.gradleallprojects &#123; repositories &#123; def REPOSITORY_URL &#x3D; &#39;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&#39; all &#123; ArtifactRepository repo -&gt; if (repo instanceof MavenArtifactRepository &amp;&amp; repo.url !&#x3D; null) &#123; def url &#x3D; repo.url.toString() if (url.startsWith(&#39;https:&#x2F;&#x2F;repo1.maven.org&#x2F;maven2&#39;) || url.startsWith(&#39;https:&#x2F;&#x2F;jcenter.bintray.com&#x2F;&#39;)) &#123; project.logger.lifecycle &quot;Repository $&#123;repo.url&#125; replaced by $REPOSITORY_URL.&quot; remove repo &#125; &#125; &#125; maven &#123; url REPOSITORY_URL &#125; &#125;&#125; Maven修改maven根目录下的conf文件夹中的settings.xml文件（或者～/.m2目录下的’settings.xml’文件）。 ps.如果你和我一样在使用idea，那么在项目右键，依次选择”Maven”-“create ‘settings.xml’”，和在～/.m2目录下新建’settings.xml’文件是一样的。 12345678910111213&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;&lt;settings xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;SETTINGS&#x2F;1.0.0&quot; xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot; xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;SETTINGS&#x2F;1.0.0 http:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;settings-1.0.0.xsd&quot;&gt; &lt;mirrors&gt; &lt;mirror&gt; &lt;id&gt;alimaven&lt;&#x2F;id&gt; &lt;name&gt;aliyun maven&lt;&#x2F;name&gt; &lt;url&gt;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&lt;&#x2F;url&gt; &lt;mirrorOf&gt;central&lt;&#x2F;mirrorOf&gt; &lt;&#x2F;mirror&gt; &lt;&#x2F;mirrors&gt;&lt;&#x2F;settings&gt; Homebrewhttps://brew.sh/index_zh-cn 1&#x2F;usr&#x2F;bin&#x2F;ruby -e &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;Homebrew&#x2F;install&#x2F;master&#x2F;install)&quot; Homebrew-bottles 镜像 12echo &#39;export HOMEBREW_BOTTLE_DOMAIN&#x3D;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;homebrew-bottles&#39; &gt;&gt; ~&#x2F;.bash_profilesource ~&#x2F;.bash_profile npm下载地址：https://nodejs.org/en/ 12npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.orgnpm config set disturl https:&#x2F;&#x2F;npm.taobao.org&#x2F;dist --global 配置后可通过下面方式来验证是否成功 1npm config get Ruby1234567891011#修改源gem sources --remove https:&#x2F;&#x2F;rubygems.org&#x2F;gem sources --add https:&#x2F;&#x2F;gems.ruby-china.com&#x2F;# 查看镜像gem sources -l# 更新升级sudo gem update --system Dockerhttp://docker-cn.com/registry-mirror 修改 /etc/docker/daemon.json 文件并添加上 registry-mirrors 键值。 123&#123; &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;]&#125; pip临时使用，可以在使用pip的时候加参数 1-i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple 永久修改，一劳永逸： Linux下，修改或创建 ~/.pip/pip.conf Windows下，修改或创建 %APPDATA%\\pip\\pip.ini 内容如下： 1234[global]index-url &#x3D; https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple[install]trusted-host&#x3D;mirrors.aliyun.com","categories":[{"name":"Code","slug":"Code","permalink":"https://ruibty.github.io/categories/Code/"}],"tags":[{"name":"Gradle","slug":"Gradle","permalink":"https://ruibty.github.io/tags/Gradle/"},{"name":"Maven","slug":"Maven","permalink":"https://ruibty.github.io/tags/Maven/"},{"name":"Homebrew","slug":"Homebrew","permalink":"https://ruibty.github.io/tags/Homebrew/"},{"name":"Node","slug":"Node","permalink":"https://ruibty.github.io/tags/Node/"}]},{"title":"ToThePoint--Vagrant","slug":"ToThePoint--Vagrant","date":"2018-11-10T08:05:00.000Z","updated":"2019-12-25T06:58:53.579Z","comments":true,"path":"2018/11/10/","link":"","permalink":"https://ruibty.github.io/2018/11/10/","excerpt":"说重点系列–Vagrant： 这个东西本质上，是你电脑上要装一个虚拟机，然后通过命令行，可以很简单的生成和配置虚拟机。 很多人说这个东西是统一开发环境的神器。不过我一般用于测试环境。过去我测试一个程序，要找一台电脑或者vps，部署好Linux，然后跑一跑，这么一个流程下来，少说2个小时完了，有了vagrant，我可能只需要十分钟就完事了。","text":"说重点系列–Vagrant： 这个东西本质上，是你电脑上要装一个虚拟机，然后通过命令行，可以很简单的生成和配置虚拟机。 很多人说这个东西是统一开发环境的神器。不过我一般用于测试环境。过去我测试一个程序，要找一台电脑或者vps，部署好Linux，然后跑一跑，这么一个流程下来，少说2个小时完了，有了vagrant，我可能只需要十分钟就完事了。 资源客户端下载：https://www.vagrantup.com/downloads.html CentOS box下载：https://cloud.centos.org/centos/7/vagrant/x86_64/images/ 手册：https://www.vagrantup.com/docs/index.html 使用加载box1vagrant box add $&#123;title&#125; $url&#125; title为自己起的名字，url为box地址，可以在线也可以本地。eg: 1vagrant box add CentOS-7-x86_64-Vagrant-1809_01 D:\\boxes\\CentOS-7-x86_64-Vagrant-1809_01.HyperV.box 建立一个虚拟机1234567891011cd $&#123;project&#125;# 下面这个步骤，本质上是在指定的目录生成一个用于配置的Vagrantfile，实际上这时候还并没有真正意义上生成一个虚拟机。# 同样的道理，如果你想修改Vagrantfile，在这个步骤之后去执行。vagrant init CentOS-7-x86_64-Vagrant-1809_01# 下面这个步骤，是根据Vagrantfile配置一台虚拟机vagrant up# 登陆&amp;使用vagrant ssh 打包分发当你配置好开发环境后，退出并关闭虚拟机。在终端里对开发环境进行打包： 1$ vagrant package 打包完成后会在当前目录生成一个 package.box 的文件，将这个文件传给其他用户.其他用户只要添加这个 box 并用其初始化自己的开发目录就能得到一个一模一样的开发环境了。 如果你只是一般使用，那么以上的操作，从新建一个”box”，到使用”box”创建一个虚拟开发环境，到将这个环境分发使用你已经没问题了。那么我们还差什么？是的，查找和删除 123456789# 查看所有已经保存并生效的box，vagrant box list# 查看所有已经生成的虚拟机vagrant gloal-status# 删除虚拟及# ps:这一步中的虚拟机id，你可以简写，比如你只有一个虚拟机。这个虚拟机的id是32547698，那么你可以直接输入一个32，会自动匹配的。 vagrant destroy $&#123;上一步生成的ID&#125; 好了，你已经学会了。 Options~/dev 目录对应虚拟机中的目录是 /vagrant 虚拟化增强其实这个没啥大用，我都准备删掉都东西。 Hyper-VWindows需管理员权限运行 virtual boxcentos 1yum install -y gcc kernel-devel ubuntu 1sudo apt install -y gcc make perl 1sh .&#x2F;VBoxLinuxAdditions.run 修改网卡模式private_networkVagrant 默认是使用端口映射方式将虚拟机的端口映射本地从而实现类似 http://localhost:80 这种访问方式。 这种方式比较麻烦，新开和修改端口的时候都得编辑。相比较而言，host-only 模式显得方便多了。打开 Vagrantfile，将下面这行的注释去掉（移除 #）并保存： 1config.vm.network :private_network, ip: &quot;192.168.33.10&quot; 重启虚拟机，这样我们就能用 192.168.33.10 访问这台机器了，你可以把 IP 改成其他地址，只要不产生冲突就行。 public_network事实上，这种模式，在配合VirtualBox使用的时候，会创建一个eth1网卡桥接，然后默认网卡依然是那张eth0。所以，很多时候，我们要自己设置一下默认网卡，比如我们可以在Vagrantfile中添加类似于这么一行： 123cat &lt;&lt;EOF &gt;&gt; &#x2F;etc&#x2F;sysconfig&#x2F;networkGATEWAYDEV&#x3D;eth1EOF Vagrantfile集成预安装就是让你在初次运行 vagrant up 后，虚拟机创建过程众自动运行的初始化命令。打开 Vagrantfile 文件末尾处有下面被注释的代码。就是让你在初次运行 vagrant up 后，虚拟机创建过程众自动运行的初始化命令。 1234config.vm.provision &quot;shell&quot;, inline: &lt;&lt;-SHELL apt-get update apt-get install -y apache2SHELL 如果你不是初次运行，同时又修改了这里的命令，想让系统再次运行这里面的命令，你可以使用 vagrant reload –provision 进行重载。 所以在这种情况下，你只要将 Vagrantfile 共享给团队的其他成员就可以了。 你还可以把要运行的命令单独写在一个文件里存放在相同的目录下，比如 bootstrap.sh： 12345678#!&#x2F;usr&#x2F;bin&#x2F;env bashapt-get updateapt-get install -y apache2if ! [ -L &#x2F;var&#x2F;www ]; then rm -rf &#x2F;var&#x2F;www ln -fs &#x2F;vagrant &#x2F;var&#x2F;wwwfi 然后在 Vagrantfile 里这样添加： 123456Vagrant.configure(&quot;2&quot;) do |config| config.vm.box &#x3D; &quot;hashicorp&#x2F;precise64&quot; ... config.vm.provision &quot;shell&quot;, path: &quot;bootstrap.sh&quot; # 添加这行end 效果和直接写在 Vagrantfile 是一样的。 注意事项使用 Apache/Nginx 时会出现诸如图片修改后但页面刷新仍然是旧文件的情况，是由于静态文件缓存造成的。需要对虚拟机里的 Apache/Nginx 配置文件进行修改： 12345# Apache 配置（httpd.conf 或者 apache.conf）添加：EnableSendfile off# Nginx 配置（nginx.conf）添加：sendfile off;","categories":[{"name":"Code","slug":"Code","permalink":"https://ruibty.github.io/categories/Code/"}],"tags":[{"name":"Vagrant","slug":"Vagrant","permalink":"https://ruibty.github.io/tags/Vagrant/"}]},{"title":"ToThePoint--Docker","slug":"ToThePoint--Docker","date":"2018-11-01T08:05:00.000Z","updated":"2019-12-25T06:58:53.579Z","comments":true,"path":"2018/11/01/","link":"","permalink":"https://ruibty.github.io/2018/11/01/","excerpt":"备忘，高手勿喷","text":"备忘，高手勿喷 安装http://www.runoob.com/docker/centos-docker-install.html 如果可以，尽量使用DokcerId登陆，而不是注册邮箱。因为邮箱和DockerID是两个分离的东西，而使用邮箱会出现问题。 从一个例子来演示使用eg：LAMP 安装CentOSOption: 如果没有目标image，那么我们就先创建一个12345# 这样安装的centos版本是的latestdocker pull centos# 指定版本:centos 7 版本docker pull centos:7 根据已有的image创建一个container并开放端口1docker run --name lamp --privileged&#x3D;true -itd -p 80:80 -p 443:443 -p 3306:3306 -v D:&#x2F;PhpstormProjects:&#x2F;var&#x2F;www&#x2F;html &lt;image id&gt; &#x2F;usr&#x2F;sbin&#x2F;init 参数 说明 -p 将本地端口映射到容器端口 -P 将同期内部使用的网络端口映射到我们的使用的主机上 -v 将本地的 文件夹映射到服务器Apache默认的网站目录下 -i 同步输入，允许你对容器的标准输入（STDIN）进行交互 -t 在容器内指定一个终端或者伪终端，同步输出 -d 后台运行，exit之后可以通过 attach 和 exec 再次进去容器 –privileged=true 特权模式 进入容器12docker attach -i -t &lt;container id&gt; &#x2F;bin&#x2F;bashdocker exec -i -t &lt;container id&gt; &#x2F;bin&#x2F;bash eg: 1docker exec -it lamp &#x2F;bin&#x2F;bash 使用 commit 命令将容器再次封装保存成images1docker commit -m &quot;description&quot; &lt;container ID&gt; new_name 再次 docker images 就会发现刚刚提交的images出现在列表里面了 将自己的镜像上传到hub.docker.com首先到docker.com注册账号，新建一个 REPOSITORY 1234docker login # 登录dockerdocker tag &lt;images ID&gt; &lt;namespace&gt;&#x2F;&lt;image name&gt;:&lt;version tag eg latest&gt;docker push &lt;namsoace&gt;&#x2F;&lt;image name&gt; # 等待上传完了就好了&#96; 命令 header 1 header 2 docker images 查看已经下载的镜像 docker ps 查看在运行的容器 docker ps -a 查看全部运行的容器,包括运行中（Up）的和退出的(Exited) docker rm 删除容器 docker rmi 删除镜像 docker create 创建一个容器但是不启动它 docker run 创建并启动一个容器 docker stop 停止容器运行，发送信号SIGTERM docker start 启动一个停止状态的容器 docker restart 重启一个容器 docker kill 发送信号给容器，默认SIGKILL docker attach 连接(进入)到一个正在运行的容器 docker wait 阻塞到一个容器，直到容器停止运行 docker inspect 深入容器内部获取容器所有信息 docker logs 查看容器的日志(stdout/stderr) docker events 得到docker服务器的实时的事件 docker port 显示容器的端口映射 docker top 显示容器的进程信息 docker diff 显示容器文件系统的前后变化","categories":[{"name":"Code","slug":"Code","permalink":"https://ruibty.github.io/categories/Code/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://ruibty.github.io/tags/Git/"}]},{"title":"Win10的一些总结","slug":"Win10的一些总结","date":"2018-10-15T08:05:00.000Z","updated":"2019-12-25T06:58:53.580Z","comments":true,"path":"2018/10/15/","link":"","permalink":"https://ruibty.github.io/2018/10/15/","excerpt":"个人使用总结","text":"个人使用总结 win10卓越性能1powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61","categories":[{"name":"Windows","slug":"Windows","permalink":"https://ruibty.github.io/categories/Windows/"}],"tags":[{"name":"Nas","slug":"Nas","permalink":"https://ruibty.github.io/tags/Nas/"},{"name":"PC","slug":"PC","permalink":"https://ruibty.github.io/tags/PC/"},{"name":"VPS","slug":"VPS","permalink":"https://ruibty.github.io/tags/VPS/"}]},{"title":"macOS的一些总结","slug":"macOS的一些总结","date":"2018-10-14T08:05:00.000Z","updated":"2019-12-25T06:58:53.581Z","comments":true,"path":"2018/10/14/","link":"","permalink":"https://ruibty.github.io/2018/10/14/","excerpt":"个人使用总结","text":"个人使用总结 查看Mac电脑的具体CPU型号1sysctl machdep.cpu.brand_string 开启任何来源来安装软件1sudo spctl --master-disable","categories":[{"name":"macOS","slug":"macOS","permalink":"https://ruibty.github.io/categories/macOS/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"https://ruibty.github.io/tags/Mac/"}]},{"title":"PC端 Wol 网络唤醒 Wake On Lan 设置","slug":"PC端 Wol 网络唤醒 Wake On Lan 设置","date":"2018-07-19T08:05:00.000Z","updated":"2019-12-25T06:58:53.579Z","comments":true,"path":"2018/07/19/","link":"","permalink":"https://ruibty.github.io/2018/07/19/","excerpt":"PC端设置WakeOnLan教程。","text":"PC端设置WakeOnLan教程。 PC机主板设置Windows系统设置","categories":[{"name":"默认分类","slug":"默认分类","permalink":"https://ruibty.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"Nas","slug":"Nas","permalink":"https://ruibty.github.io/tags/Nas/"},{"name":"PC","slug":"PC","permalink":"https://ruibty.github.io/tags/PC/"}]},{"title":"java JDK安装与环境变量配置","slug":"java JDK安装与环境变量配置","date":"2018-05-22T08:05:00.000Z","updated":"2019-12-25T06:58:53.580Z","comments":true,"path":"2018/05/22/","link":"","permalink":"https://ruibty.github.io/2018/05/22/","excerpt":"备忘，高手勿喷","text":"备忘，高手勿喷 ==Java SE Development Kit Downloads==http://www.oracle.com/technetwork/java/javase/downloads/index.html ==Windows版本==123456789JAVA_HOMEC:\\Program Files\\Java\\jdk-11.0.2PATH;%JAVA_HOME%\\binCLASSPATH.;%JAVA_HOME%\\lib ==Ubuntu版本==1. 创建Java的目标路径文件夹1sudo mkdir &#x2F;usr&#x2F;lib&#x2F;jvm 2. 解压jdk压缩文件1sudo tar -C &#x2F;usr&#x2F;lib&#x2F;jvm -xzf jdk-11.0.2_linux-x64_bin.tar.gz 3. 查看本机上是否还有java可选。1update-alternatives --list java 如果出现错误，系统中没有java可选，我们可以进行以下步骤 4. 配置环境变量命令：1vim ~&#x2F;.bashrc 添加以下代码： 1234export JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk-11.0.2export JRE_HOME&#x3D;$&#123;JAVA_HOME&#125;&#x2F;jre export CLASSPATH&#x3D;.:$&#123;JAVA_HOME&#125;&#x2F;lib:$&#123;JRE_HOME&#125;&#x2F;lib export PATH&#x3D;$PATH:$&#123;JAVA_HOME&#125;&#x2F;bin 添加以下代码： 123export JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk-11.0.2export CLASSPATH&#x3D;.:$&#123;JAVA_HOME&#125;&#x2F;libexport PATH&#x3D;$PATH:$&#123;JAVA_HOME&#125;&#x2F;bin 5. 使环境变量马上生效1source ~&#x2F;.bashrc 然后就是要告诉ubuntu系统，我们使用的sun的JDK，而非OpenJDK了： 1sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;java java &#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk-11.0.2&#x2F;bin&#x2F;java 300 1sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;javac javac &#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk-11.0.2&#x2F;bin&#x2F;javac 300 1sudo update-alternatives --install &#x2F;usr&#x2F;bin&#x2F;jar jar &#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk-11.0.2&#x2F;bin&#x2F;jar 300 1sudo update-alternatives --config java 如果最后一步没有显示你有多个jdk，那么就无视他。到此结束配置。 有 2 个候选项可用于替换 java (提供 /usr/bin/java)。 选择&nbsp;&nbsp;路径&nbsp;&nbsp;优先级&nbsp;&nbsp;状态*0&nbsp;&nbsp;/usr/lib/jvm/java-6-openjdk/jre/bin/java 1061 自动模式 &nbsp;1&nbsp;&nbsp;/usr/lib/jvm/java-6-openjdk/jre/bin/java 1061 手动模式 &nbsp;2&nbsp;&nbsp;/usr/lib/jvm/jdk1.8.0_144/bin/java 300 手动模式要维持当前值[*]请按回车键，或者键入选择的编号：？ ==Cent OS版本==创建Java的目标路径文件夹1mkdir &#x2F;usr&#x2F;lib&#x2F;jvm 解压jdk压缩文件1tar -C &#x2F;usr&#x2F;lib&#x2F;jvm -xzf serverjre-11.0.2_linux-x64_bin.tar.gz 配置环境变量命令：1vim &#x2F;etc&#x2F;profile 添加以下代码： 123export JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk-11.0.2export CLASSPATH&#x3D;.:$&#123;JAVA_HOME&#125;&#x2F;libexport PATH&#x3D;$PATH:$&#123;JAVA_HOME&#125;&#x2F;bin 使环境变量马上生效1source &#x2F;etc&#x2F;profile","categories":[{"name":"默认分类","slug":"默认分类","permalink":"https://ruibty.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://ruibty.github.io/tags/Java/"}]},{"title":"apache整合tomato并实现ssl","slug":"apache整合tomato并实现ssl","date":"2018-05-15T08:05:00.000Z","updated":"2019-12-25T06:58:53.580Z","comments":true,"path":"2018/05/15/","link":"","permalink":"https://ruibty.github.io/2018/05/15/","excerpt":"老规矩，废话不表，直接干。","text":"老规矩，废话不表，直接干。 名称 含义 ${Apache} Apache的安装目录 ${tomcat} tomcat的安装目录 LAMP此步骤不再详述 安装mod_jkwindows下载地址： http://archive.apache.org/dist/tomcat/tomcat-connectors/jk/binaries/windows/ 复制到 1$&#123;Apache&#125;&#x2F;modules&#x2F;mod_jk.so 加载： 1LoadModule jk_module modules&#x2F;mod_jk.so Linuxhttp://tomcat.apache.org/download-connectors.cgi 1wget http:&#x2F;&#x2F;mirrors.hust.edu.cn&#x2F;apache&#x2F;tomcat&#x2F;tomcat-connectors&#x2F;jk&#x2F;tomcat-connectors-1.2.43-src.tar.gz 安装依赖1sudo yum -y install autoconf libtool apr-util-devel httpd-devel 进入native123.&#x2F;buildconf.sh.&#x2F;configure --with-apxs&#x3D;&#x2F;usr&#x2F;bin&#x2F;apxssudo make &amp;&amp; make install 配置新建workers.properties配置文件1touch $&#123;Apache&#125;&#x2F;conf&#x2F;workers.properties 编辑workers.properties配置文件12345worker.list&#x3D;oneworker.one.port&#x3D;8009worker.one.host&#x3D;localhostworker.one.type&#x3D;ajp13 8009端口为tomcat的默认ajp13端口，可以在${tomcat}/conf/server.xml的“protocol=”AJP/1.3””查看 配置apache加载workers.properties配置文件12JKWorkersFile conf&#x2F;workers.propertiesJkLogFile logs&#x2F;mod_jk.log 为Apche新建虚拟机1234567891011121314151617181920212223242526&lt;VirtualHost *:80&gt; ServerName www.test.com &lt;IfModule mod_rewrite.c&gt; RewriteEngine On RewriteRule ^(.*)$ https:&#x2F;&#x2F;www.test.com$1 [R&#x3D;301,L] &lt;&#x2F;IfModule&gt;&lt;&#x2F;VirtualHost&gt;&lt;VirtualHost *:443&gt; SSLEngine on # 添加 SSL 协议支持协议，去掉不安全的协议 SSLProtocol all -SSLv2 -SSLv3 # 修改加密套件如下 SSLCipherSuite HIGH:!RC4:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!EXP:+MEDIUM SSLHonorCipherOrder on # 证书公钥配置 SSLCertificateFile &#x2F;etc&#x2F;httpd&#x2F;cert&#x2F;www.test.com&#x2F;apache&#x2F;public.pem # 证书私钥配置 SSLCertificateKeyFile &#x2F;etc&#x2F;httpd&#x2F;cert&#x2F;www.test.com&#x2F;apache&#x2F;123456789.key # 证书链配置，如果该属性开头有 &#39;#&#39;字符，请删除掉 SSLCertificateChainFile &#x2F;etc&#x2F;httpd&#x2F;cert&#x2F;www.test.com&#x2F;apache&#x2F;chain.pem ServerName www.test.com JkMount &#x2F;* one&lt;&#x2F;VirtualHost&gt;","categories":[{"name":"默认分类","slug":"默认分类","permalink":"https://ruibty.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://ruibty.github.io/tags/Linux/"},{"name":"PC","slug":"PC","permalink":"https://ruibty.github.io/tags/PC/"},{"name":"VPS","slug":"VPS","permalink":"https://ruibty.github.io/tags/VPS/"}]},{"title":"利用内存空间制作RamDisk，用作浏览器缓存盘","slug":"利用内存空间制作RamDisk，用作浏览器缓存盘","date":"2018-04-30T08:05:00.000Z","updated":"2019-12-25T06:58:53.581Z","comments":true,"path":"2018/04/30/","link":"","permalink":"https://ruibty.github.io/2018/04/30/","excerpt":"内存虚拟为本地磁盘","text":"内存虚拟为本地磁盘 下载：QSoft.RAMDisk.v5.3.2.14 火狐查看火狐浏览器的当前的缓存路径：在Firefox地址栏中输入 1about:cache 并键入回车，可以看到当前Firefox的内存缓冲位置与磁盘高速缓存位置。继续单击该页面上的“List Cache Entries”链接，可以进一步查看缓冲区中有哪些数据文件，并可以查看这些数据信息的具体属性。 设置磁盘缓存目录放入其他目录：地址栏输入 1about:config 右键新建两个字符串。一个名为： 1browser.cache.disk.parent_directory （硬盘缓存），然后输入新的缓存文件存储路径；另一个名为： 1browser.cache.offline.parent_directory （脱机缓存），然后输入新的脱机缓存文件的路径， 1R:\\Firefox 一 般情况下，硬盘文件缓存路径和脱机缓存路径可以保持一致。 设置后缓存路径之后，还需要再进行检查 browser.cache.disk.enable和browser.cache.offline.enable两个字符串的值必须为 true 才可以保障设置的缓存路径有效。 以上设置好了之后，可以在地址栏输入 about:cache，可以看到缓存目录已经改变了，这样就可以不必担心缓存文件过大而影响系统运行效率了。 另外，改变Firefox的配置文件目录有时也可以修改放在一个比较可靠的位置，而避免Firefox的设置被无意中删除掉，如放在Firefox的安装目录等，具体设置可以按照下面的操作： 在关闭firefox的情况下运行 1firefox -p 打开配置工具，新建配置文件，选择目录。（可以删除原配置，不过如果不手动将原来的配置文件复制到新的目录，启动firefox后要重新配置。）","categories":[{"name":"Windows","slug":"Windows","permalink":"https://ruibty.github.io/categories/Windows/"}],"tags":[{"name":"PC","slug":"PC","permalink":"https://ruibty.github.io/tags/PC/"},{"name":"RAM","slug":"RAM","permalink":"https://ruibty.github.io/tags/RAM/"},{"name":"RamDisk","slug":"RamDisk","permalink":"https://ruibty.github.io/tags/RamDisk/"}]},{"title":"iPhone DFU刷机","slug":"iPhone DFU刷机","date":"2018-04-29T08:05:00.000Z","updated":"2019-12-25T06:58:53.580Z","comments":true,"path":"2018/04/29/","link":"","permalink":"https://ruibty.github.io/2018/04/29/","excerpt":"关于DFU刷机模式的记录","text":"关于DFU刷机模式的记录 DFU模式刷机步骤1. 下载并安装iTuneshttps://www.apple.com/cn/itunes/download/ 2. 下载固件：http://act.feng.com/wetools/index.php?r=iosRom/index 3. iPhone进入DFU模式 关机 按住开机键大约2-3秒，出现苹果logo，和刚开机看到的一样（白底黑logo） 出现上述画面后，再按住Home键，大约8秒，开机键不用松开 当屏幕变成黑色的时候，松开开机键，继续按着Home键大约15秒。 手机黑屏，进入DFU。 这时候，iTunes上就会出现【iTunes检测到一个处于恢复模式的iPhone】 4. 恢复iPhone 按住键盘上的【shift】，鼠标点击【恢复iPhone】 选择刚才下载好的固件 点击【恢复】 接下来就等待一段时间，一般是十多分钟 如果你是iPhone7之流重启1.长按右侧的电源键 2.在按住电源键的同时，长按 iPhone 左侧的音量减键 3.一直按住两个按键直到屏幕黑屏，并持续按住两个按键，直到手机重启。 DFU模式./p 长按设备右侧电源键 3 秒 在按住电源键的同时，长按 iPhone 左侧的音量减键 同时按住两个按键 10 秒（如果看到苹果logo，那就是长按的时间太长了，你需要重新开始） 松开电源键，但还需要按住音量减键大约 5 秒（如果看到插入 iTunes 的界面，则意味着长按的时间太长，你需要重新开始） 如果看到屏幕依然是黑屏，那么恭喜你，iPhone 7 现在已经处于 DFU 模式了。 ps 苹果刷机报错 header 1 header 2 3049 CPU 4005 CPU 4013 CPU 4014 RAM 9 ROM 14 ROM 21 ROM 29 ROM 40 ROM 91 ROM -1 基带 1 基带 2 基带 3 基带 27 基带 31 基带 3 码片 16 码片 27 码片 1669 码片 3004 电池网络 3194 固件不兼容 53 HOME键指纹","categories":[{"name":"默认分类","slug":"默认分类","permalink":"https://ruibty.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"iPhone","slug":"iPhone","permalink":"https://ruibty.github.io/tags/iPhone/"},{"name":"刷机","slug":"刷机","permalink":"https://ruibty.github.io/tags/%E5%88%B7%E6%9C%BA/"},{"name":"手机","slug":"手机","permalink":"https://ruibty.github.io/tags/%E6%89%8B%E6%9C%BA/"}]},{"title":"ToThePoint--Git","slug":"ToThePoint--Git","date":"2018-04-06T08:05:00.000Z","updated":"2019-12-25T06:58:53.579Z","comments":true,"path":"2018/04/06/","link":"","permalink":"https://ruibty.github.io/2018/04/06/","excerpt":"备忘，高手勿喷","text":"备忘，高手勿喷 作为客户端的简单使用安装1. 下载Windwos:https://git-scm.com/downloadsLinux:不叙 2. 生成密钥1ssh-keygen -t rsa -C &quot;2260413@qq.com&quot; id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人，比如添加到你的git服务器上。ps:引号里面换成你个人的信息，这个不需要解释了吧？ 3. 配置账户信息12git config --global user.name &quot;ruibty&quot;git config --global user.email &quot;2260413@qq.com&quot; ps:引号里面换成你个人的信息，这个不需要解释了吧？ 1.4使用1234git clone git@192.168.8.34:&#x2F;data&#x2F;git&#x2F;learngit.git ----克隆git add . 或者 git add www&#x2F;js&#x2F;a.js ------添加(所有改动文件&#x2F;具体某个文件)到暂存区git commit -m &#39;修改xxxbug&#39; ------描述并提交到本地当前分支git push ------提交到服务器 1.5 已有项目？123cd existing_git_repogit remote add origin git@gitee.com:ruibty&#x2F;ruibty.gitgit push -u origin master 技巧远程仓库的管理查看远程仓库的明细，列出所有仓库1git remote -v 返回类似： 12gitee git@gitee.com:ruibty&#x2F;ruibty.git (fetch)gitee git@gitee.com:ruibty&#x2F;ruibty.git (push) 删除某远程仓库1git remote rm gitee 将项目提交到多个git仓库(github和gitee)在一个项目中添加多个地址（推荐） 1git remote set-url --add origin git@gitee.com:ruibty&#x2F;ruibty.git 搭建Git服务器以CentOS为例 2.1 安装Git1yum install -y git 2.2 创建用户1adduser git 2.3 禁用git用户的shell登陆1vi &#x2F;etc&#x2F;passwd 文件完成。找到类似下面的一行： 1git:x:1001:1001:,,,:&#x2F;home&#x2F;git:&#x2F;bin&#x2F;bash 最后一个冒号后改为： 1git:x:1001:1001:,,,:&#x2F;home&#x2F;git:&#x2F;usr&#x2F;bin&#x2F;git-shell Git服务器打开RSA认证RSA认证打开 1vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config 123RSAAuthentication yes PubkeyAuthentication yes AuthorizedKeysFile .ssh&#x2F;authorized_keys 重启sshd 1systemctl restart sshd.server 2.4 初始化git仓库这里我们选择/data/git/learngit.git来作为我们的git仓库 1git init --bare learngit.git 1chown git:git learngit.git 2.5 创建git仓库12345678mkdir ruibtycd ruibtygit inittouch README.mdgit add README.mdgit commit -m &quot;first commit&quot;git remote add origin git@gitee.com:ruibty&#x2F;ruibty.gitgit push -u origin master 然后就是像1.4一样使用了 分支 建议修改的部分放到分支，修改完成后，回到源分支，然后合并新建分支代码 新建并提交分支1git checkout -b &lt;branchName&gt; 提交分支1git push --set-upstream origin dev 分支合，去掉分支的冗余提交。即，将分支的多次提交一次性合并到主分支上。1git merge --squash &lt;branchName&gt; 查看远程分支1git branch -a 删除远程分支1git push origin --delete &lt;branchName&gt;","categories":[{"name":"Code","slug":"Code","permalink":"https://ruibty.github.io/categories/Code/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://ruibty.github.io/tags/Git/"}]},{"title":"Linux系统开启BBR","slug":"Linux系统开启BBR","date":"2018-03-11T08:19:16.000Z","updated":"2019-12-25T06:58:53.579Z","comments":true,"path":"2018/03/11/","link":"","permalink":"https://ruibty.github.io/2018/03/11/","excerpt":"Linux kernel 4.9.x开始支持tcp_bbr","text":"Linux kernel 4.9.x开始支持tcp_bbr 查看当前内核1uname -a 如有必要，自行升级，可参考文档 配置文件12echo &quot;net.core.default_qdisc&#x3D;fq&quot; &gt;&gt; &#x2F;etc&#x2F;sysctl.confecho &quot;net.ipv4.tcp_congestion_control&#x3D;bbr&quot; &gt;&gt; &#x2F;etc&#x2F;sysctl.conf 保存生效1sysctl -p 分别查看可以用和现在使用的拥塞控制算法1sysctl net.ipv4.tcp_available_congestion_control net.ipv4.tcp_available_congestion_control = bbr cubic reno 1sysctl net.ipv4.tcp_congestion_control net.ipv4.tcp_congestion_control = bbr 执行下面的命令，看到有 tcp_bbr 模块即说明BBR已启动。1lsmod | grep bbr","categories":[{"name":"默认分类","slug":"默认分类","permalink":"https://ruibty.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://ruibty.github.io/tags/Linux/"}]},{"title":"VPS实现个人云主机","slug":"VPS实现个人云主机","date":"2018-02-04T08:05:00.000Z","updated":"2019-12-25T06:58:53.579Z","comments":true,"path":"2018/02/04/","link":"","permalink":"https://ruibty.github.io/2018/02/04/","excerpt":"资源为vultr上的一台VPS，目标在于实现个人用途的服务器","text":"资源为vultr上的一台VPS，目标在于实现个人用途的服务器 老规矩，废话不表，直接干。 开启Root密匙登陆，关闭密码登陆升级内核开启BBR参见： 安装LAMP1yum install -y httpd mariadb 123yum -y install epel-releaserpm -Uvh https:&#x2F;&#x2F;mirror.webtatic.com&#x2F;yum&#x2F;el7&#x2F;webtatic-release.rpmyum install -y php70w 搭建NextCloud配置shadowsocks","categories":[{"name":"默认分类","slug":"默认分类","permalink":"https://ruibty.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"Nas","slug":"Nas","permalink":"https://ruibty.github.io/tags/Nas/"},{"name":"PC","slug":"PC","permalink":"https://ruibty.github.io/tags/PC/"},{"name":"VPS","slug":"VPS","permalink":"https://ruibty.github.io/tags/VPS/"}]},{"title":"Linux升级内核","slug":"Linux升级内核","date":"2018-02-03T08:05:00.000Z","updated":"2019-12-25T06:58:53.578Z","comments":true,"path":"2018/02/03/","link":"","permalink":"https://ruibty.github.io/2018/02/03/","excerpt":"资源为vultr上的一台VPS，目标在于实现个人用途的服务器","text":"资源为vultr上的一台VPS，目标在于实现个人用途的服务器 Debian/Ubuntu最新内核查看这里： Debian Kernel Ubuntu Kernel 下载最新内核 1wget http:&#x2F;&#x2F;kernel.ubuntu.com&#x2F;~kernel-ppa&#x2F;mainline&#x2F;v4.15&#x2F;linux-image-4.15.0-041500-generic_4.15.0-041500.201801282230_amd64.deb 安装内核 1dpkg -i linux-image-4.15.*.deb 删除其余内核或调整内核启动顺序 12dpkg -l|grep linux-image apt-get purge 旧内核 也可以不调整内核启动顺序，ubuntu 跟debian 都会默认4.15.x启动的。 更新 grub 系统引导文件并重启 12update-grubreboot CentOShttp://elrepo.org/tiki/tiki-index.php 12345rpm --import https:&#x2F;&#x2F;www.elrepo.org&#x2F;RPM-GPG-KEY-elrepo.orgrpm -Uvh http:&#x2F;&#x2F;www.elrepo.org&#x2F;elrepo-release-7.0-3.el7.elrepo.noarch.rpmyum install yum-plugin-fastestmirroryum --enablerepo&#x3D;elrepo-kernel install kernel-mlgrub2-set-default 0 yum install -y ncurses-devel elfutils-libelf-devel bc # 安装需要的软件 1截至至发稿日，[www.kernel.org](https:&#x2F;&#x2F;www.kernel.org&#x2F;)最新的Stable Kernal为4.15.1，于是有了一下命令： wget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.15.1.tar.xz –no-check-certificate #下载内核，并忽略验证证书tar -xvf linux-4.15.1.tar.xz #解压内核cd linux-4.15.1 12345如果是第一次编译内核则可以跳过不执行下面步骤。删除之前编译所生成的文件、配置文件和备份文件等。与之相似的命令还有 make clean、make distclean。删除范围是distclean &gt; mrproper &gt; clean。 make mrproper 12查看一下当前的内核 uname -a 1于是有了下面的命令，其他人请根据自己的环境自行修改。 cp /boot/config-3.10.0-693.11.6.el7.x86_64 .configsh -c ‘ y“” | make oldconfig’ #centos7中使用这个命令make menuconfig #这里我用的是menuconfig，有图形化界面比较方便，这里界面弹出来之后直接exit就好。make #编译内核，3.10的版本内核直接make就好了，老版本的内核可能要分别执行几个命令。这一步时间要比较久。make modulesmake modules_installmake install[root@docker-dev linux-4.9.39]# awk -F&#39; ‘$1==”menuentry “ {print $2}’ /etc/grub2.cfg[root@docker-dev linux-4.9.39]# grub2-set-default 0 &amp;&amp; init 6 12完事重启，检查是否为新的内核 uname -a centos 6.x是通过/etc/grub.conf就行内核启动顺序修改的，而且比较直观查看。但centos 7的系统和6就不一样了，是通过grub2为引导程序。下边简单说下centos 7的内核启动顺序如何修改。 1，首先查看当前系统有几个内核。比如： cat /boot/grub2/grub.cfg |grep menuentry 2，设置默认的启动内核，选择CentOS Linux (4.12.0-rc5)7 (Core)这个内核为默认启动。 grub2-set-default &quot;CentOS Linux (3.10.0-327.el7.x86_64)7 (Core) 验证是否修改成功：grub2-editenv list 3，重启机器观察。 重启成功以后查看下机器的内核是不是该内核： 在虚拟机启动的时候出现多个内核引导项，选第一个进入系统 进入系统后查看内核版本，成功升级成4.12","categories":[{"name":"Linux","slug":"Linux","permalink":"https://ruibty.github.io/categories/Linux/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://ruibty.github.io/tags/Git/"}]},{"title":"SublimeText3安装中文","slug":"SublimeText3安装中文","date":"2018-02-01T08:05:00.000Z","updated":"2019-12-25T06:58:53.579Z","comments":true,"path":"2018/02/01/","link":"","permalink":"https://ruibty.github.io/2018/02/01/","excerpt":"其实官方已经给出了答案。","text":"其实官方已经给出了答案。 官网链接：https://packagecontrol.io/installation 在Sublime Text3中按下ctrl+`, 注意，`是键盘1左边的那个键。 在下面的命令行Ctrl+V粘贴，回车。 此时Package Control就装好了。 安装ChineseLocalization 点击Preferences/Package Control， 然后点击Package Control：Install Package,（第一次运行可以要几秒钟，因为要下载Package Control里面存在的包”花名册”） 然后在弹出的命令界面，输入Chinese，选择ChineseLocalizations(回车或者鼠标单击)。 切换语言，帮助(H)/Language/简体中文，繁体中文，日本语，English。","categories":[{"name":"默认分类","slug":"默认分类","permalink":"https://ruibty.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"SublimeText","slug":"SublimeText","permalink":"https://ruibty.github.io/tags/SublimeText/"}]},{"title":"惠普HP 840 G2 UEFI方式安装LinuxMint系统","slug":"machine/惠普HP 840 G2 UEFI方式安装LinuxMint系统","date":"2018-01-22T08:05:00.000Z","updated":"2019-12-25T06:58:53.581Z","comments":true,"path":"2018/01/22/","link":"","permalink":"https://ruibty.github.io/2018/01/22/","excerpt":"新入手一款笔记本，型号为：惠普HP 840 G2。在安装LinuxMint的时候，uefi方式安装之后无法自动引导，手动引导又太麻烦…","text":"新入手一款笔记本，型号为：惠普HP 840 G2。在安装LinuxMint的时候，uefi方式安装之后无法自动引导，手动引导又太麻烦… 部分图片手机拍摄，画质渣，见谅。 废话不多说，直接开始。 升级Bios在惠普官方网站找到840 G2最新的BIOS文件，升级过程不叙，都是非常简单的傻瓜式操作，按照提示一步一步来即可（以下操作皆为截止至发稿日惠普提供的最新Bios文件）。升级完成后的信息大概如下： 安装操作系统我使用了UltraISO这个软件，制作了一个USB启动安装盘。安装过程也不再详叙。这个网上教程很多。 BISO设置启动项好像是LinuxMint并没有获得微软认证，所以她的安装过程，这个笔记本并不能自动添加“操作系统引导管理器”，所以要手动设置，这个才是问题的关键所在。 进入Bios，启动设置为如图所示： 然后选择自定义引导，添加路径，我安装的是LinuxMint18.3这个操作系统，我的路径如图： 1\\EFI\\ubuntu\\grubx64.efi 根据版本更迭或者其他文件，请自行修改。","categories":[{"name":"Machine/机器","slug":"Machine-机器","permalink":"https://ruibty.github.io/categories/Machine-%E6%9C%BA%E5%99%A8/"}],"tags":[{"name":"电脑","slug":"电脑","permalink":"https://ruibty.github.io/tags/%E7%94%B5%E8%84%91/"},{"name":"uefi","slug":"uefi","permalink":"https://ruibty.github.io/tags/uefi/"}]},{"title":"Marvell 88SE9128 Pcie转SATA控制卡刷固件实现ACHI","slug":"Marvell 88SE9128 Pcie转SATA控制卡刷固件实现ACHI","date":"2018-01-15T08:05:00.000Z","updated":"2019-12-25T06:58:53.579Z","comments":true,"path":"2018/01/15/","link":"","permalink":"https://ruibty.github.io/2018/01/15/","excerpt":"Marvell 88SE9128是一款流行度很高的pice转SATA控制卡，近日因扩展需要，购得微星转接卡一样，发现主控芯片正好为马牌pcie转SATA控制卡一张，但是默认固件中硬盘的工作方式为IDE，这怎么能忍？遂升级至新版固件，实现ACHI方式。","text":"Marvell 88SE9128是一款流行度很高的pice转SATA控制卡，近日因扩展需要，购得微星转接卡一样，发现主控芯片正好为马牌pcie转SATA控制卡一张，但是默认固件中硬盘的工作方式为IDE，这怎么能忍？遂升级至新版固件，实现ACHI方式。 废话不多说，直接上链接： http://www.station-drivers.com/index.php?option=com_remository&amp;Itemid=353&amp;func=select&amp;id=347&amp;orderby=4&amp;lang=en 老规矩，动手能力强的朋友可直接跳过我以下的啰嗦，上手DOS按照固件包内的说明升级即可。","categories":[{"name":"默认分类","slug":"默认分类","permalink":"https://ruibty.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"Nas","slug":"Nas","permalink":"https://ruibty.github.io/tags/Nas/"},{"name":"PC","slug":"PC","permalink":"https://ruibty.github.io/tags/PC/"},{"name":"硬件","slug":"硬件","permalink":"https://ruibty.github.io/tags/%E7%A1%AC%E4%BB%B6/"}]},{"title":"Windows10系统访问和使用共享","slug":"Windows10系统访问和使用共享","date":"2018-01-14T08:33:16.000Z","updated":"2019-12-25T06:58:53.580Z","comments":true,"path":"2018/01/14/","link":"","permalink":"https://ruibty.github.io/2018/01/14/","excerpt":"本文随时可能有改动，不断尝试改进。","text":"本文随时可能有改动，不断尝试改进。 Win10无法访问局域网内低版本系统创建的共享资源如果你仅仅是为了解决问题，而并无兴趣了解具体原因，请尝试在Win10主机导入如下注册表； AllowInsecureGuestAuth.reg","categories":[{"name":"Windows","slug":"Windows","permalink":"https://ruibty.github.io/categories/Windows/"}],"tags":[{"name":"Win10","slug":"Win10","permalink":"https://ruibty.github.io/tags/Win10/"},{"name":"共享","slug":"共享","permalink":"https://ruibty.github.io/tags/%E5%85%B1%E4%BA%AB/"}]},{"title":"Linux 系统命令","slug":"Linux 系统命令","date":"2018-01-07T08:05:00.000Z","updated":"2019-12-25T06:58:53.578Z","comments":true,"path":"2018/01/07/","link":"","permalink":"https://ruibty.github.io/2018/01/07/","excerpt":"备忘，高手勿喷。","text":"备忘，高手勿喷。 本文随时可能有改动，不断尝试改进。 apt 安装本地包 1234sudo rpm -ivh linuxqq_1.0.1-b1-100_mips64el.rpmsudo dpkg -i linuxqq_1.0.1-b1-100_armhf.debsudo apt install -y &#x2F;path&#x2F;to&#x2F;linuxqq_1.0.1-b1-100_amd64.debsudo pacman -U linuxqq_1.0.1-ci-94_x86_64.pkg.tar.xz","categories":[{"name":"默认分类","slug":"默认分类","permalink":"https://ruibty.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"言论","slug":"言论","permalink":"https://ruibty.github.io/tags/%E8%A8%80%E8%AE%BA/"}]},{"title":"言论 - 名言摘录","slug":"言论 - 名言摘录","date":"2018-01-06T08:05:00.000Z","updated":"2019-12-25T06:58:53.582Z","comments":true,"path":"2018/01/06/","link":"","permalink":"https://ruibty.github.io/2018/01/06/","excerpt":"记录见过的一些喜欢的句子。","text":"记录见过的一些喜欢的句子。 本文随时可能有改动，不断尝试改进。 米开朗基罗：雕像本来就在石头里，我只是把不要的部分去掉 人并不是仅仅在于寻求结果，如果只是为了寻求结果，人很容易走捷径的，在走捷径的过程中，人会很容易迷失真实，甚至连满腔的热忱也会逐渐丧失，我认为真正重要的是追求真实的意志。只要有了这种向真实前进的意志，即使这次失败了，我们也终于会达到终点。 就好像球赛，好的球员要紧盯的是球场上的对手，而不是比分牌。 微微风簇浪，散作满河星。 莫畏浮云遮望眼，风物长宜放眼量。 人的一切痛苦，本质上都是对自己无能的愤怒。 人与人最小的差别是智商，最大的差别是坚持。 没有行动的梦想，那是妄想 如果能控制粗鄙的狂喜，就不会有深入骨髓的悲伤。 有这么一种事儿，它在iPhone上叫越狱，在Android上叫Root，在Symbian上叫免签，在Web入侵时叫提权，在生活里，它叫表白……名字和领域不同，但是道理惊人地相似：之前举步维艰，之后为所欲为。 智慧就是适应变化的能力。 有时候，“虚惊一场”这四个字是人世间最美好的成语，比起什么兴高采烈，五彩缤纷，一帆风顺都要美好百倍。你可懂什么叫失去。这些时间来，更觉如此。愿悲伤恐惧能够过去，事外之人更懂珍惜。 无耻是无耻者的通行证，高尚是高尚者的墓志铭。 理论一套一套，放之于纸上熠熠生辉，放之于实际则可能一败涂地。 一个傻瓜提出来的问题，十个聪明人也回答不上来。 问题解决不了，就解决提出问题的人。 去还是不去，去；买还是不买，不买；说还是不说，不说。","categories":[{"name":"默认分类","slug":"默认分类","permalink":"https://ruibty.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"言论","slug":"言论","permalink":"https://ruibty.github.io/tags/%E8%A8%80%E8%AE%BA/"}]},{"title":"Windows上的SSD缓存 -ExpressCache","slug":"Windows上的SSD缓存 -ExpressCache","date":"2018-01-04T03:23:16.000Z","updated":"2019-12-25T06:58:53.580Z","comments":true,"path":"2018/01/04/","link":"","permalink":"https://ruibty.github.io/2018/01/04/","excerpt":"ExpressCache源自condusiv公司的Diskeeper产品 这个软件可以使用SSD来为HDD提供缓存，一方面，延长了HDD的寿命，另外一方面，也提升了HDD的响应速度。","text":"ExpressCache源自condusiv公司的Diskeeper产品 这个软件可以使用SSD来为HDD提供缓存，一方面，延长了HDD的寿命，另外一方面，也提升了HDD的响应速度。 以下所有操作均需要管理员权限使用说明：1234567891011USAGE: ECCmd [-NOLOGO] [-INFO | -PARTITION | -FORMAT] -NOLOGO - No copyright message will be displayed. -INFO - Display ExpressCache activity information. -PARTITION - Create an ExpressCache partition. [DriveId] - Optional drive ID [PartSize] - Optional partition size in MB -FORMAT - Format the cache volume. 安装步骤 准备要用来做cache的SSD清空一个完整的SSD或者删除某SSD的一个分区都可以 下载对应的版本 版本名称 地址 联想（推荐） https://pcsupport.lenovo.com/us/zh/products/laptops-and-netbooks/thinkpad-t-series-laptops/thinkpad-t440s/downloads/DS104444 华硕 http://driver.zol.com.cn/detail/45/444953.shtml Sandisk http://mp3support.sandisk.com/ReadyCache/ExpressCacheSetup.exe 三星 acer 安装完先不要重启，如果非允许的设备，先破解。 破解方法 引用地址 备用下载地址 方法1 http://www.sdbeta.com/xiazai/2015/0609/35806.html 方法2（推荐） http://lxf.me/432 Ruibty’s Blog 如果对分区大小不满意，删除，然后1ECCMD -PARTITION 1 119000 (意思是建立分区 在第一个磁盘上 开一个 119000M的分区） 常见命令 命令 说明 ECCmd -INFO 查看状态外 ECCmd -EXCLUDE C C盘不做缓存 ECCmd -CLEAREXCLUSIONS 取消缓存排除 ECCmd -FORMAT 初始化缓存，也就是清空SSD里的缓存 快速安装Intel Rapid Start Technology和Expresscache软件http://think.lenovo.com.cn/htmls/knowledge/detail_20131128123732489.html","categories":[{"name":"Windows","slug":"Windows","permalink":"https://ruibty.github.io/categories/Windows/"}],"tags":[{"name":"ExpressCache","slug":"ExpressCache","permalink":"https://ruibty.github.io/tags/ExpressCache/"},{"name":"缓存","slug":"缓存","permalink":"https://ruibty.github.io/tags/%E7%BC%93%E5%AD%98/"},{"name":"NAS","slug":"NAS","permalink":"https://ruibty.github.io/tags/NAS/"}]}]}